% מתארי רשימות
% ------------

:-op(700,xfx,הוא).
:-op(900,fy,[לא]).
:-op(200,yf,[+,-,\]).

ראשון_ברשימה(_איבר,[_איבר|_]).

חבר(_איבר,_רשימה):-
	ראשון_ברשימה(_איבר,_רשימה).
חבר(_איבר,[_|_תת_רשימה]):-
	חבר(_איבר,_תת_רשימה).

מיקום_איבר(1,_איבר,_רשימה):-
	ראשון_ברשימה(_איבר,_רשימה).
מיקום_איבר(_מיקום,_איבר,[_|_תת_רשימה]):-
	מיקום_איבר(_מיקום_חדש,_איבר,_תת_רשימה),
	_מיקום הוא 1 + _מיקום_חדש.

מספר_איברים(0,[]).
מספר_איברים(_מספר,[_|_זנב]):-
    מספר_איברים(_קודם,_זנב),
    _מספר הוא 1 + _קודם.

סכום_רשימה(0,[]).
סכום_רשימה(_סכום,[_ראש|_זנב]):-
	סכום_רשימה(_סכום_זנב,_זנב),
	_סכום הוא _ראש + _סכום_זנב.


שרשר([],_רשימה,_רשימה).
שרשר([_איבר|_זנב],_רשימה,[_איבר|_חדש]):-
    שרשר(_זנב,_רשימה,_חדש).

הפוך( _רשימה, _הפוכה ) :-
    הפוך( _רשימה, [], _הפוכה ), !.

הפוך([],_צובר,_צובר).
הפוך([_איבר|_זנב],_צובר,_הפוכה):-
    הפוך(_זנב,[_איבר|_צובר],_הפוכה).

מצא_כל(_איבר,_מטרה,_רשימה):-
    קורא(_מטרה),
    הוסף( מחסנית(_איבר) ),
    הכשל;
    !,
    הוסף( מחסנית(תחתית) ),
    אסוף_כל(_רשימה).
     
מצא_כל1(_איבר,_מטרה,_רשימה):-
    קורא(_מטרה),
    הוסף( מחסנית(_איבר) ),
    הכשל;
    !,
    הוסף( מחסנית(תחתית) ),
    אסוף_כל(_רשימה).
     



אסוף_כל(L):-
    הסר( מחסנית(_איבר) ),
    !,
    ( _איבר = תחתית,
      !,
      L = [] ;
      _איבר \= תחתית,	
      L = [_איבר|_שאר],
      אסוף_כל(_שאר)
    ).

	
מחק_שב([],[],_).



מחק_שב([_רכב|_זנב],[_רכב|_זנב2],_רצון):-
 לא חבר(_רכב,_רצון),
 מחק_שב(_זנב,_זנב2,_רצון).



מחק_שב([_רכב|_זנב],_זנב2 , _רצון):-
 חבר(_רכב,_רצון),
 מחק_שב(_זנב,_זנב2,_רצון).